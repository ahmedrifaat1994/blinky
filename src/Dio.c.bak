/***********************************************************************
* FILE DESCRITION
* --------------------------------------------------------------------*/
/**          \file Dio.c
*           \brief Digitl Input\Output Driver
*
*         \details
*
***********************************************************************/

/***********************************************************************
* INCLUDES
***********************************************************************/
#include "Mcu_Hw.h"
#include "Dio.h"
/***********************************************************************
* LOCAL MACROS CONSTANT\FUNCTIONS
***********************************************************************/

/***********************************************************************
* LOCAL DATA
***********************************************************************/

/***********************************************************************
* GLOBAL DATA
***********************************************************************/

/***********************************************************************
* LOCAL FUNCTIONS PROTOYPES
***********************************************************************/

/***********************************************************************
* LOCAL FUNCTIONS
***********************************************************************/

/***********************************************************************
* GLOBAL FUNCTIONS
***********************************************************************/


/******************************************************
* \Syntax          : Dio_LevelType Dio_ReadChannel(Dio_PortType PortId, Dio_ChannelType ChannelId)
* \Discription     : Reads a channel
*
* \Sync\Async      : Async
* \Reentrancy      : Reentrant
* \Parameters (in) : ChannelId
* \Parameters (out): None
* \Return value    : Dio_LevelType
******************************************************/
Dio_LevelType Dio_ReadChannel(Dio_PortType PortId, Dio_ChannelType ChannelId){
    unsigned long pin = (0x01 << (ChannelId + 2));
	Dio_LevelType readData = (Dio_LevelType)BM_ADDR(PortId, GPIODATA, pin);
	
	return readData;
}
/******************************************************
* \Syntax          : void Dio_WriteChannel(Dio_PortType PortId, Dio_ChannelType ChannelId, Dio_LevelType Level)
* \Discription     : Writes a channel
*
* \Sync\Async      : Async
* \Reentrancy      : Reentrant
* \Parameters (in) : ChannelId, Level
* \Parameters (out): None
* \Return value    : None
******************************************************/
void Dio_WriteChannel(Dio_PortType PortId, Dio_ChannelType ChannelId, Dio_LevelType Level){
    unsigned long pin = (0x01 << (ChannelId + 2));
	BM_ADDR(PortId, GPIODATA, pin) = Level;
}
/******************************************************
* \Syntax          : Dio_PortLevelType Dio_ReadPort(Dio_PortType PortId)
* \Discription     : Reads Port
*
* \Sync\Async      : Async
* \Reentrancy      : Reentrant
* \Parameters (in) : PortId
* \Parameters (out): None
* \Return value    :Dio_PortLevelType
******************************************************/
Dio_PortLevelType Dio_ReadPort(Dio_PortType PortId){
	Dio_PortLevelType readData = (Dio_PortLevelType)ADDR(PortId, (GPIODATA+0x3FC));
	
	return readData;
}
/******************************************************
* \Syntax          : void Dio_WritePort(Dio_PortType PortId, Dio_PortLevelType Level)
* \Discription     : Writes Port
*
* \Sync\Async      : Async
* \Reentrancy      : Reentrant
* \Parameters (in) : PortId, Level
* \Parameters (out): None
* \Return value    : None
******************************************************/
void Dio_WritePort(Dio_PortType PortId, Dio_PortLevelType Level){
	ADDR(PortId, (GPIODATA+0x3FC)) = Level;
}
/******************************************************
* \Syntax          :  
* \Discription     :
*
* \Sync\Async      :
* \Reentrancy      :
* \Parameters (in) :
* \Parameters (out):
* \Return value    :
******************************************************/
Dio_LevelType Dio_FlipChannel(Dio_PortType PortId, Dio_ChannelType ChannelId){
    static unsigned char level = 0x00;
	Dio_LevelType readData;

    Dio_WriteChannel(PortId, ChannelId, level);

    level = ~level;
	
	readData = (Dio_LevelType)Dio_ReadChannel(PortId, ChannelId);
	
	return readData;
}



/***********************************************************************
* END OF FILE: Dio.c
***********************************************************************/
